"use strict";(self["webpackChunkprotfolio_front_1"]=self["webpackChunkprotfolio_front_1"]||[]).push([[1703],{1703:function(r,s,t){t.d(s,{Absorbers:function(){return o}});t(4114);var a=t(5811);const i=0;class o{constructor(r){this.container=r,this.array=[],this.absorbers=[],this.interactivityAbsorbers=[],r.getAbsorber=r=>void 0===r||(0,a.Et)(r)?this.array[r??i]:this.array.find((s=>s.name===r)),r.addAbsorber=async(r,s)=>this.addAbsorber(r,s)}async addAbsorber(r,s){const{AbsorberInstance:a}=await t.e(4479).then(t.bind(t,4479)),i=new a(this,this.container,r,s);return this.array.push(i),i}draw(r){for(const s of this.array)s.draw(r)}handleClickMode(r){const s=this.absorbers,t=this.interactivityAbsorbers;if("absorber"===r){const r=(0,a.TA)(t),i=r??(0,a.TA)(s),o=this.container.interactivity.mouse.clickPosition;this.addAbsorber(i,o)}}async init(){this.absorbers=this.container.actualOptions.absorbers,this.interactivityAbsorbers=this.container.actualOptions.interactivity.modes.absorbers;const r=(0,a.wJ)(this.absorbers,(async r=>{await this.addAbsorber(r)}));r instanceof Array?await Promise.all(r):await r}particleUpdate(r){for(const s of this.array)if(s.attract(r),r.destroyed)break}removeAbsorber(r){const s=this.array.indexOf(r),t=1;s>=i&&this.array.splice(s,t)}resize(){for(const r of this.array)r.resize()}stop(){this.array=[]}}}}]);
//# sourceMappingURL=1703.4b876996.js.map